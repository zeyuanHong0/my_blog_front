"use client";

import { useState } from "react";
import { Pen, Trash } from "lucide-react";

import { formatDateTime } from "@/utils/getTime";

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  ColumnDef,
  flexRender,
  getCoreRowModel,
  useReactTable,
  getPaginationRowModel,
} from "@tanstack/react-table";

import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import DataTableColumnHeader from "@/components/data-table-column-header";
import DataTablePagination from "@/components/Pagination";

export type tag = {
  id: string;
  name: string;
  icon: string;
  createTime: string;
  updateTime: string;
};

const createColumns = (showEditForm: (id: string) => void): ColumnDef<tag>[] => [
  {
    id: "select",
    header: ({ table }) => (
      <Checkbox
        checked={table.getIsAllPageRowsSelected()}
        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}
        aria-label="Select all"
      />
    ),
    cell: ({ row }) => (
      <Checkbox
        checked={row.getIsSelected()}
        onCheckedChange={(value) => row.toggleSelected(!!value)}
        aria-label="Select row"
      />
    ),
    enableSorting: false,
    enableHiding: false,
  },
  {
    accessorKey: "name",
    header: () => <DataTableColumnHeader title="名称" />,
    cell: ({ row }) => (
      <div className="min-w-[120px] whitespace-nowrap">
        {row.getValue("name")}
      </div>
    ),
  },
  {
    accessorKey: "icon",
    header: () => <DataTableColumnHeader title="图标" />,
    cell: ({ row }) => {
      const icon = row.getValue("icon") as string;
      return (
        <div className="min-w-[120px] whitespace-nowrap">
          <div 
            className="w-6 h-6 flex items-center justify-center [&>svg]:w-full [&>svg]:h-full"
            dangerouslySetInnerHTML={{ __html: icon }} 
          />
        </div>
      );
    },
  },
  {
    accessorKey: "createTime",
    header: () => <DataTableColumnHeader title="创建时间" />,
    cell: ({ row }) => {
      const [date, time] = formatDateTime(row.getValue("createTime"));
      return (
        <div className="flex flex-col gap-1">
          <div>{date}</div>
          <div className="text-muted-foreground text-xs">{time}</div>
        </div>
      );
    },
  },
  {
    accessorKey: "updateTime",
    header: () => <DataTableColumnHeader title="更新时间" />,
    cell: ({ row }) => {
      const [date, time] = formatDateTime(row.getValue("updateTime"));
      return (
        <div className="flex flex-col gap-1">
          <div>{date}</div>
          <div className="text-muted-foreground text-xs">{time}</div>
        </div>
      );
    },
  },
  {
    id: "actions",
    cell: ({ row }) => {
      return (
        <div className="flex items-center gap-2">
          <Button 
            size={"icon"} 
            variant="outline"
            onClick={() => showEditForm(row.original.id)}
          >
            <Pen />
          </Button>
          <Button size={"icon"} variant="outline">
            <Trash />
          </Button>
        </div>
      );
    },
  },
];

interface DataTableProps<TData, TValue> {
  columns: ColumnDef<TData, TValue>[];
  data: TData[];
  showEditForm: (id: string) => void;
}

function DataTable<TData, TValue>({
  columns,
  data,
}: DataTableProps<TData, TValue>) {
  const [rowSelection, setRowSelection] = useState({});

  const table = useReactTable({
    data,
    columns,
    getCoreRowModel: getCoreRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
    onRowSelectionChange: setRowSelection,
    state: {
      rowSelection,
    },
  });

  return (
    <div className="w-full rounded-lg border">
      <div className="w-full">
        <Table>
          <TableHeader>
            {table.getHeaderGroups().map((headerGroup) => (
              <TableRow key={headerGroup.id}>
                {headerGroup.headers.map((header) => {
                  return (
                    <TableHead key={header.id} className="p-4">
                      {header.isPlaceholder
                        ? null
                        : flexRender(
                            header.column.columnDef.header,
                            header.getContext(),
                          )}
                    </TableHead>
                  );
                })}
              </TableRow>
            ))}
          </TableHeader>
          <TableBody>
            {table.getRowModel().rows?.length ? (
              table.getRowModel().rows.map((row) => (
                <TableRow
                  key={row.id}
                  data-state={row.getIsSelected() && "selected"}
                  className="h-20"
                >
                  {row.getVisibleCells().map((cell) => (
                    <TableCell key={cell.id} className="p-4">
                      {flexRender(
                        cell.column.columnDef.cell,
                        cell.getContext(),
                      )}
                    </TableCell>
                  ))}
                </TableRow>
              ))
            ) : (
              <TableRow>
                <TableCell
                  colSpan={columns.length}
                  className="h-24 text-center"
                >
                  No results.
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </div>

      <div>
        <DataTablePagination table={table} />
      </div>
    </div>
  );
}

interface TagTableProps {
  showEditForm: (id: string) => void;
}

export default function TagTable({ showEditForm }: TagTableProps) {
  const columns = createColumns(showEditForm);
  
  const data = [
    {
      id: "1",
      name: "nestjs",
      icon: '<svg xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256"><g fill="none"><rect width="256" height="256" fill="#f4f2ed" rx="60"/><path fill="#e0234e" d="M146.728 18c-1.556 0-3.001.342-4.335.799c2.835 1.939 4.391 4.506 5.169 7.415c.056.399.167.684.222 1.083c.056.343.112.685.112 1.027c.222 5.02-1.279 5.647-2.335 8.613c-1.612 3.822-1.167 7.928.778 11.237c.167.399.389.855.667 1.255c-2.112-14.431 9.616-16.599 11.784-21.105c.166-3.936-3.002-6.56-5.503-8.385c-2.39-1.483-4.558-1.939-6.559-1.939m17.676 3.251c-.223 1.312-.056.97-.111 1.654c-.056.457-.056 1.027-.112 1.483a13 13 0 0 1-.389 1.37c-.111.456-.278.912-.444 1.368c-.223.457-.389.856-.612 1.312c-.166.228-.278.456-.444.685l-.334.513c-.278.4-.556.799-.834 1.14c-.333.343-.611.742-1 1.027v.058c-.334.285-.667.627-1.056.912c-1.167.913-2.501 1.597-3.724 2.453c-.389.285-.778.513-1.112.855c-.389.286-.722.57-1.056.913c-.389.342-.667.684-1 1.084c-.278.342-.612.741-.834 1.14c-.278.4-.556.8-.778 1.198c-.223.457-.389.856-.612 1.312c-.166.457-.333.856-.444 1.312c-.167.514-.278.97-.389 1.426c-.056.228-.056.514-.112.742c-.055.228-.055.456-.111.684c0 .456-.055.97-.055 1.426c0 .342 0 .685.055 1.027c0 .456.056.912.167 1.426c.056.456.167.912.278 1.369c.167.456.278.912.445 1.369c.111.285.278.57.389.798l-12.784-5.076a135 135 0 0 0-6.448-1.711l-3.502-.856a101 101 0 0 0-10.116-1.54c-.111 0-.166-.057-.278-.057a97 97 0 0 0-9.949-.514c-2.446 0-4.891.114-7.281.286c-3.39.228-6.781.684-10.172 1.255c-.834.114-1.667.285-2.501.456c-1.723.342-3.39.741-5.003 1.14l-2.5.685c-.835.342-1.613.742-2.39 1.084l-1.835.855c-.111.057-.222.057-.278.114c-.556.286-1.056.514-1.556.799a3 3 0 0 0-.39.171c-.61.285-1.222.627-1.722.913c-.39.17-.779.399-1.112.57c-.167.114-.39.228-.5.285c-.5.286-1 .57-1.446.856q-.75.427-1.334.855c-.389.286-.778.514-1.111.799c-.056.057-.111.057-.167.114c-.333.228-.722.513-1.056.799l-.111.114l-.834.684c-.11.057-.222.171-.333.228c-.278.228-.556.514-.834.742c-.056.114-.167.17-.222.228c-.334.342-.667.627-1 .97c-.057 0-.057.057-.112.114c-.334.285-.667.627-1 .97c-.056.056-.056.113-.112.113c-.278.285-.555.57-.833.913c-.111.114-.278.228-.39.342c-.277.342-.61.685-.944 1.027c-.056.114-.167.171-.223.285c-.444.456-.834.913-1.278 1.369l-.167.171c-.89.97-1.834 1.94-2.835 2.795c-1 .913-2.056 1.768-3.112 2.51a42 42 0 0 1-3.335 2.167a34 34 0 0 1-3.502 1.711a39 39 0 0 1-3.613 1.37c-2.334.513-4.724 1.482-6.78 1.653c-.446 0-.946.114-1.39.172c-.5.114-.945.228-1.39.342l-1.334.513c-.445.171-.89.4-1.334.628c-.39.285-.834.513-1.223.798a9 9 0 0 0-1.111.97c-.39.285-.779.684-1.112 1.026c-.334.4-.667.742-.945 1.141c-.278.457-.611.856-.834 1.312c-.278.4-.556.856-.778 1.312c-.222.513-.445.97-.611 1.483c-.167.456-.334.97-.5 1.483c-.112.456-.223.913-.278 1.369c0 .057-.056.114-.056.171c-.111.514-.111 1.198-.167 1.54c-.056.4-.111.742-.111 1.141c0 .228 0 .513.056.742c.055.399.11.741.222 1.083c.111.343.223.685.39 1.027v.057c.166.342.388.684.61 1.027c.223.342.445.684.723 1.026c.278.286.612.628.945.913a8 8 0 0 0 1.056.913c1.334 1.197 1.668 1.597 3.39 2.509c.279.172.556.286.89.457c.056 0 .111.057.167.057c0 .114 0 .171.055.285c.056.456.167.913.278 1.369c.111.513.278.97.445 1.369c.167.342.278.684.445 1.027c.055.114.11.228.166.285c.223.456.445.855.667 1.255l.834 1.198c.278.342.612.741.945 1.083c.334.343.667.628 1.056.97c0 0 .056.057.111.057c.334.285.667.571 1 .799c.39.285.779.513 1.224.741a9 9 0 0 0 1.278.628c.333.171.722.285 1.112.399c.055.057.11.057.222.114c.222.057.5.114.723.171c-.167 3.08-.223 5.989.222 7.016c.5 1.141 2.946-2.339 5.392-6.332c-.334 3.936-.556 8.556 0 9.925c.61 1.426 3.946-3.023 6.836-7.928c39.408-9.355 75.37 18.595 79.15 58.066c-.723-6.161-8.115-9.583-11.506-8.727c-1.667 4.22-4.502 9.639-9.06 13.004c.39-3.764.223-7.643-.555-11.407c-1.223 5.247-3.613 10.153-6.893 14.373c-5.28.4-10.56-2.224-13.34-6.16c-.222-.171-.277-.513-.444-.741c-.167-.4-.334-.799-.445-1.198a4.8 4.8 0 0 1-.333-1.198c-.056-.399-.056-.798-.056-1.255v-.855c.056-.4.167-.799.278-1.198c.11-.399.222-.799.389-1.198c.222-.399.389-.798.667-1.198c.945-2.738.945-4.962-.778-6.274a6.3 6.3 0 0 0-1.056-.57c-.223-.058-.5-.172-.723-.229c-.167-.057-.278-.114-.444-.171c-.39-.114-.779-.228-1.168-.285a4.1 4.1 0 0 0-1.167-.171a9 9 0 0 0-1.223-.114c-.278 0-.556.057-.834.057c-.444 0-.833.057-1.222.171c-.39.057-.779.114-1.168.228s-.778.229-1.167.4s-.722.342-1.111.513c-.334.171-.668.399-1.057.57c-12.95 8.67-5.224 28.976 3.613 34.851c-3.335.628-6.725 1.369-7.67 2.111l-.111.114c2.39 1.483 4.891 2.738 7.504 3.821a180 180 0 0 0 9.004 2.738v.057a52.4 52.4 0 0 0 14.007 1.027c24.623-1.768 44.799-20.99 48.468-46.316c.111.514.222.97.333 1.483c.167 1.027.389 2.111.501 3.194v.058c.111.513.166 1.026.222 1.483v.228c.056.513.111 1.027.111 1.483c.056.627.111 1.255.111 1.882v.913c0 .285.056.627.056.912c0 .343-.056.685-.056 1.027v.799c0 .399-.055.741-.055 1.141c0 .228 0 .456-.056.741c0 .399-.056.799-.056 1.255c-.056.171-.056.342-.056.513c-.055.457-.111.856-.166 1.312c0 .171 0 .342-.056.514c-.056.57-.167 1.083-.222 1.654v.114c-.111.513-.223 1.084-.334 1.597v.171l-.333 1.54c0 .057-.056.171-.056.228a16 16 0 0 1-.389 1.541v.171c-.167.57-.334 1.083-.445 1.597c-.055.057-.055.114-.055.114l-.501 1.711c-.222.57-.389 1.084-.611 1.654s-.389 1.141-.611 1.654c-.223.571-.445 1.084-.667 1.654h-.056c-.223.514-.445 1.084-.723 1.597a3 3 0 0 1-.167.4c-.055.057-.055.114-.111.171c-3.613 7.472-8.948 14.031-15.618 19.165c-.445.285-.89.627-1.334.97c-.111.113-.278.171-.389.285c-.39.285-.779.57-1.223.855l.166.343h.056l2.335-.343h.055c1.445-.228 2.891-.513 4.336-.798a9.5 9.5 0 0 0 1.223-.285c.277-.058.5-.114.778-.172c.389-.057.778-.171 1.167-.228c.333-.114.667-.171 1-.285c5.559-1.369 10.95-3.251 16.119-5.476c-8.837 12.378-20.676 22.36-34.516 28.919c6.392-.456 12.784-1.54 18.953-3.365c22.4-6.788 41.243-22.246 52.526-43.065c-2.279 13.176-7.393 25.725-14.952 36.676a88 88 0 0 0 14.841-12.662c12.45-13.347 20.621-30.288 23.4-48.483a93.1 93.1 0 0 1 1.612 27.492c40.131-57.438 3.335-116.987-12.061-132.672c-.056-.114-.111-.172-.111-.286c-.056.058-.056.058-.056.114c0-.057 0-.057-.056-.114c0 .685-.056 1.37-.111 2.054a78 78 0 0 1-.556 3.821c-.278 1.255-.611 2.51-.945 3.765a48 48 0 0 1-1.334 3.65a50 50 0 0 1-1.667 3.48c-.612 1.084-1.279 2.224-2.001 3.251a44 44 0 0 1-2.279 3.08c-.834 1.027-1.723 1.94-2.612 2.852c-.556.514-1.057.97-1.612 1.426c-.445.4-.834.742-1.279 1.14c-1 .8-2.001 1.54-3.112 2.225c-1.056.685-2.168 1.37-3.28 1.94a95 95 0 0 1-3.501 1.597a39 39 0 0 1-3.613 1.198a44 44 0 0 1-3.724.855c-1.279.229-2.557.343-3.78.457c-.889.057-1.779.114-2.668.114c-1.278 0-2.557-.114-3.78-.229c-1.278-.114-2.556-.285-3.779-.57c-1.279-.228-2.501-.57-3.724-.97h-.056c1.223-.114 2.446-.228 3.669-.456a39 39 0 0 0 3.724-.856a39 39 0 0 0 3.612-1.198c1.223-.456 2.39-1.026 3.502-1.597c1.167-.57 2.223-1.197 3.335-1.882c1.056-.741 2.112-1.483 3.113-2.281q1.5-1.198 2.834-2.567c.945-.856 1.779-1.825 2.613-2.795a56 56 0 0 0 2.334-3.08c.111-.171.223-.4.334-.57a71 71 0 0 0 1.612-2.739a40 40 0 0 0 1.667-3.479a41 41 0 0 0 1.334-3.65c.389-1.198.667-2.453.945-3.708c.223-1.312.445-2.567.556-3.821c.111-1.312.222-2.624.222-3.88c0-.912-.055-1.824-.111-2.737c-.111-1.312-.278-2.567-.444-3.822a43 43 0 0 0-.834-3.821c-.389-1.198-.778-2.453-1.223-3.65c-.445-1.199-1-2.396-1.556-3.537c-.612-1.14-1.223-2.282-1.89-3.365a63 63 0 0 0-2.223-3.138c-.834-.97-1.668-1.939-2.557-2.909c-.445-.456-.945-.97-1.445-1.425a103 103 0 0 0-7.726-5.59a10 10 0 0 0-1.112-.57c-1.834-1.199-3.557-1.826-5.28-2.396"/></g></svg>',
      createTime: "2023-10-01 10:00:00",
      updateTime: "2023-10-02 12:00:00",
    },
    {
      id: "2",
      name: "vue",
      icon: '<svg xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256"><g fill="none"><rect width="256" height="256" fill="#f4f2ee" rx="60"/><path fill="#41b883" d="M182 50h36l-90 155.25L38 50h68.85L128 86l20.7-36z"/><path fill="#41b883" d="m38 50l90 155.25L218 50h-36l-54 93.15L73.55 50z"/><path fill="#35495e" d="M73.55 50L128 143.6L182 50h-33.3L128 86l-21.15-36z"/></g></svg>',
      createTime: "2023-10-03 14:30:00",
      updateTime: "2023-10-04 16:45:00",
    },
    {
      id: "3",
      name: "react",
      icon: '<svg xmlns="http://www.w3.org/2000/svg" width="256" height="228" viewBox="0 0 256 228"><path fill="#00d8ff" d="M210.483 73.824a172 172 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171 171 0 0 0-6.375 5.848a156 156 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a171 171 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a146 146 0 0 0 6.921 2.165a168 168 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a146 146 0 0 0 5.342-4.923a168 168 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145 145 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844m-6.365 70.984q-2.102.694-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14m-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a157 157 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345q.785 3.162 1.386 6.193M87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a157 157 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a135 135 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94M50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a135 135 0 0 1-6.318-1.979m12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144 144 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160 160 0 0 1-1.76-7.887m110.427 27.268a348 348 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381 381 0 0 0-7.365-13.322m-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322 322 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18M82.802 87.83a323 323 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a322 322 0 0 0-7.848 12.897m8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321 321 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147m37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486m52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382 382 0 0 0 7.859-13.026a347 347 0 0 0 7.425-13.565m-16.898 8.101a359 359 0 0 1-12.281 19.815a329 329 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310 310 0 0 1-12.513-19.846h.001a307 307 0 0 1-10.923-20.627a310 310 0 0 1 10.89-20.637l-.001.001a307 307 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329 329 0 0 1 12.335 19.695a359 359 0 0 1 11.036 20.54a330 330 0 0 1-11 20.722m22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026q-.518 2.504-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a161 161 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3M128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86"/></svg>',
      createTime: "2023-10-05 09:15:00",
      updateTime: "2023-10-06 11:20:00",
    },
    {
      id: "4",
      name: "vite",
      icon: '<svg xmlns="http://www.w3.org/2000/svg" width="256" height="257" viewBox="0 0 256 257"><defs><linearGradient id="SVGmrugVdcL" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41d1ff"/><stop offset="100%" stop-color="#bd34fe"/></linearGradient><linearGradient id="SVGqn4NsbfA" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#ffea83"/><stop offset="8.333%" stop-color="#ffdd35"/><stop offset="100%" stop-color="#ffa800"/></linearGradient></defs><path fill="url(#SVGmrugVdcL)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.5 6.5 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62"/><path fill="url(#SVGqn4NsbfA)" d="M185.432.063L96.44 17.501a3.27 3.27 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113"/></svg>',
      createTime: "2023-10-07 13:50:00",
      updateTime: "2023-10-08 15:30:00",
    },
    {
      id: "5",
      name: "webpack",
      icon: '<svg xmlns="http://www.w3.org/2000/svg" width="256" height="290" viewBox="0 0 256 290"><path fill="#fff" d="m128 .048l128 72.405V217.31l-128 72.405L0 217.31V72.453z"/><path fill="#8ed6fb" d="m233.153 212.287l-100.902 57.14V224.99l62.889-34.632zm6.907-6.231V86.654l-36.902 21.3v76.8zm-217.6 6.23l100.903 57.094v-44.438l-62.889-34.584zm-6.907-6.23V86.654l36.903 21.3v76.8zm4.3-127.13l103.51-58.543v42.99L57.045 99.84l-.532.29zm215.86 0L132.251 20.382v42.99l66.27 36.515l.531.29z"/><path fill="#1c78c0" d="m123.363 214.847l-62.02-34.15v-67.574l62.02 35.792zm8.888 0l62.02-34.101v-67.623l-62.02 35.792zM65.497 105.298l62.31-34.246l62.26 34.246l-62.26 35.937z"/></svg>',
      createTime: "2023-10-09 08:40:00",
      updateTime: "2023-10-10 10:55:00",
    },
  ];

  return <DataTable columns={columns} data={data} showEditForm={showEditForm} />;
}
